{
 "endpoints":[
 {
  "name":"Code Packages",
  "methods":[
  {"URI":"/projects/:project_id/codes",
  "RequiresOAuth":"N",
  "HTTPMethod":"GET",
  "MethodName": "List Code Packages",
  "Synopsis": "List Code Packages",
  "parameters":[
  {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   },
  {
   "Name":"page",
   "Required":"N",
   "Default":"0",
   "Type":"int",
   "Description":"The page of code packages you want to retrieve, starting from 0. Default is 0, maximum is 100."
   },
   {
     "Name":"per_page",
     "Required":"N",
     "Default":"30",
     "Type":"int",
     "Description":"The number of code packages to return per page. Note this is a maximum value, so there may be fewer packages returned if there aren’t enough results. Default is 30, maximum is 100."
   }
   ]
   },
   {"URI":"/projects/:project_id/codes",
   "RequiresOAuth":"N",
   "HTTPMethod":"POST",
   "MethodName": "Upload or Update a Code Package",
   "Synopsis": "Upload or Update a Code Package",
   "parameters":[
     {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   },

   {
     "Name":"name",
     "Description": "A unique name for your worker. This will be used to assign tasks to the worker as well as to update the code. If a worker with this name already exists, the code you are uploading will be added as a new revision.",
     "Type":"string",
     "Required":"Y"
     },
     {
       "Name":"file",
       "Description" : "A multipart-encoded string containing the zip file you are uploading.",
       "Type":"string",
       "Required":"Y"
       },
       {
         "Name":"file_name",
         "Description" : "The name of the file within the zip that will be executed when a task is run.",
         "Type":"string",
         "Required":"Y"
         },
         {
           "Name":"runtime",
           "Description" : "The language to execute your worker with. The following values are valid sh, ruby, python, php, node",
           "Type":"string",
           "Required":"Y",
           "EnumeratedList":["sh", "ruby", "python", "php", "node"], 
           "EnumeratedDescription": {
            "sh":"shell/binary",
            "ruby":"ruby",
            "python":"python",
            "php":"PHP",
            "node":"node.js"
          }
          },
          {
           "Name":"config",
           "Description" : "An arbitrary string (usually YAML or JSON) that, if provided, will be available in a file that your worker can access. File location will be passed in via the -config argument. The config cannot be larger than 64KB in size.",
           "Type":"string",
           "Required":"N"
           },
           {
             "Name":"max_concurrency",
             "Description" : "The maximum number of workers that should be run in parallel. This is useful for keeping your workers from hitting API quotas or overloading databases that are not prepared to handle the highly-concurrent worker environment. If omitted, there will be no limit on the number of concurrent workers.",
             "Type":"int",
             "Required":"N"
             },
             {
               "Name":"retries",
               "Description" : "The maximum number of times failed tasks should be retried, in the event that there’s an error while running them. If omitted, tasks will not be retried. Tasks cannot be retried more than ten times.",
               "Type":"int",
               "Required":"N"
               },

               {"Name":"retries_delay",
               "Description" :  "The number of seconds to wait before retries. If omitted, tasks will be immediately retried.",
               "Required":"N"
             }
             ]
             },
             {"URI":"/projects/:project_id/codes/:code_id",
             "RequiresOAuth":"N",
             "HTTPMethod":"GET", 
             "MethodName": "Get Info About A Code Package",
             "Synopsis": "Get Info About A Code Package",
             "parameters":[
               {
   "Name":"code_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Code ID"
   },
               {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   }]
             },
             {"URI":"/projects/:project_id/codes/:code_id",
             "RequiresOAuth":"N",
             "HTTPMethod":"DELETE", 
             "MethodName": "Delete a Code Package",
             "Synopsis": "Delete a Code Package",
             "parameters":[
               {
   "Name":"code_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Code ID"
   },
               {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   }]
             },
             {"URI":"/projects/:project_id/codes/:code_id/download",
             "RequiresOAuth":"N",
             "HTTPMethod":"GET", 
             "MethodName": "Download a Code Package",
             "Synopsis": "Download a Code Package: The response will be a zip file containing your code package. The response header will include a Content-Disposition header containing “filename=yourworker_rev.zip”, where yourworker is the code package’s name and rev is the numeric revision. The response’s Content-Type will be “application/zip”.",
             "parameters":[
             {
   "Name":"code_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Code ID"
   },
               {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   },
             {
               "Name":"revision",
               "Description" :  "The revision of the code package you want to download. If not specified, the latest revision will be downloaded.",
               "Required":"N"
             }
             ]
             },
             {"URI":"/projects/:project_id/codes/:code_id/revisions",
             "RequiresOAuth":"N",
             "HTTPMethod":"GET", 
             "MethodName": "List Code Package Revisions",
             "Synopsis": "List Code Package Revisions : The response will be a JSON object with a revisions property, containing a list of JSON objects, each representing a revision to the code package.",
             "parameters":[{
   "Name":"code_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Code ID"
   },
               {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   },
             {
              "Name":"page",
              "Required":"N",
              "Default":"0",
              "Type":"int",
              "Description":"The page of code packages you want to retrieve, starting from 0. Default is 0, maximum is 100."
              },
              {
                "Name":"per_page",
                "Required":"N",
                "Default":"30",
                "Type":"int",
                "Description":"The number of code packages to return per page. Note this is a maximum value, so there may be fewer packages returned if there aren’t enough results. Default is 30, maximum is 100."
              }
              ]
            }
            ]
            },
            {
              "name":"Tasks",
              "methods":[
              {"URI":"/projects/:project_id/tasks",
              "HTTPMethod":"GET", 
              "MethodName": "List Tasks",
              "Synopsis": "List Tasks: The response will be a JSON object. The 'tasks' property will contain a JSON array of objects, each representing a task.",
              "parameters":[
                {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   },{
                "Name":"page",
                "Required":"N",
                "Default":"0",
                "Type":"int",
                "Description":"The page of code packages you want to retrieve, starting from 0. Default is 0, maximum is 100."
                },
                {
                  "Name":"per_page",
                  "Required":"N",
                  "Default":"30",
                  "Type":"int",
                  "Description":"The number of code packages to return per page. Note this is a maximum value, so there may be fewer packages returned if there aren’t enough results. Default is 30, maximum is 100."
                }
                ]},

                {"URI":"/projects/:project_id/tasks",
                "HTTPMethod":"POST", 
                "MethodName": "Queue a Task",
                "Synopsis": "Queue a Task",
                "parameters":[
                  {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   },
                {"Name":"code_name",
                "Type":"string",
                "Required":"Y",
                "Description":"The name of the code package to execute for this task."},
                {"Name":"payload",
                "Type":"string",
                "Required":"Y",
                "Description":"A string of data to be passed to the worker (usually JSON) so the worker knows exactly what worker it should perform. This is the equivalent to a message in a typical message queue. The payload will be available in a file that your worker can access. File location will be passed in via the -payload argument. The payload cannot be larger than 64KB in size."},

                {"Name":"priority",
                "Default":"0",
                "Type":"int",
                "Required":"Y",
                "Description":"The priority queue to run the task in. Valid values are 0, 1, and 2. 0 is the default."},
                {"Name":"timeout",
                "Default":"3600",
                "Type":"int",
                "Required":"Y",
                "Description":"The maximum runtime of your task in seconds. No task can exceed 3600 seconds (60 minutes). The default is 3600 but can be set to a shorter duration."},
                {"Name":"delay",
                "Default":"0",
                "Type":"int",
                "Required":"Y",
                "Description":"The number of seconds to delay before actually queuing the task. Default is 0."
              }
              ]},

              {"URI":"/projects/:project_id/tasks/webhook",
              "HTTPMethod":"POST", 
              "MethodName": "Queue a Task from a Webhook",
              "Synopsis": "Queue a Task from a Webhook",
              "parameters":[
                {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   },
              {"Name":"Request body????",
              "Required":"Y",
              "Description":"The request body is free-form: anything at all can be sent. Whatever the request body is will be passed along as the payload for the task, and therefore needs to be under 64KB in size."
            }
            ]},


            {"URI":"/projects/:project_id/tasks/:task_id",
            "HTTPMethod":"GET", 
            "MethodName": "Get Info About a Task",
            "Synopsis": "The response will be a JSON object containing the details of the task.",
            "parameters":[
            {
   "Name":"task_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Task ID"
   },
              {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   }
            ]},


            {"URI":"/projects/:project_id/tasks/:task_id/log",
            "HTTPMethod":"GET", 
            "MethodName": "Get a Task's Log",
            "Synopsis": "Unlike the other API methods, this method will return a Content-Type of “text/plain”. The response will only include the task’s log.",
            "parameters":[
            {
   "Name":"task_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Task ID"
   },
              {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   }
            ]},


            {"URI":"/projects/:project_id/tasks/:task_id/cancel",
            "HTTPMethod":"POST", 
            "MethodName": "Cancel a Task",
            "Synopsis": "Cancel a Task",
            "parameters":[
              {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   },{
   "Name":"task_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Task ID"
   }

            ]},


            {"URI":"/projects/:project_id/tasks/:task_id/progress",
            "HTTPMethod":"POST", 
            "MethodName": "Set a Task's Progress",
            "Synopsis": "Set a Task's Progress",
            "parameters":[
            {
   "Name":"task_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Task ID"
   },
              {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   },
            {"Name":"percent",
            "Required":"Y",
            "Description": "An integer, between 0 and 100 inclusive, that describes the completion of the task.",
            "Default":"0",
            "Type":"int"},

            {"Name":"msg",
            "Required":"Y",
            "Description": "Any message or data describing the completion of the task. Must be a string value, and the 64KB request limit applies.",
            "Type":"string"}
            ]},



            {"URI":"/projects/:project_id/tasks/:task_id/retry",
            "HTTPMethod":"POST", 
            "MethodName": "Retry a Task",
            "Synopsis": "Retry a Task",
            "parameters":[
            {
   "Name":"task_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Task ID"
   },
              {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   },
            {"Name":"delay",
            "Required": "N",
            "Type":"int",
            "Description":"The number of seconds to delay before actually queuing the task. Default is 0."
          }
          ]
        }
      ]
    },
    {
    "name":"Scheduled Tasks",
    "methods":[
{
  "URI":"/projects/:project_id/schedules",
  "HTTPMethod":"GET", 
  "MethodName": "List Scheduled Tasks",
  "Synopsis": "List Scheduled Tasks",
  "parameters":[
    {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   },
    {
    "Name":"page",
    "Required":"N",
    "Default":"0",
    "Type":"int",
    "Required":"Y",
    "Description":"The page of code packages you want to retrieve, starting from 0. Default is 0, maximum is 100."
    },
    {
      "Name":"per_page",
      "Required":"N",
      "Default":"30",
      "Type":"int",
      "Required":"Y",
      "Description":"The number of code packages to return per page. Note this is a maximum value, so there may be fewer packages returned if there aren’t enough results. Default is 30, maximum is 100."
    }
  ]
},
{
  "URI":"/projects/:project_id/schedules",
    "HTTPMethod":"POST", 
    "MethodName": "Schedule a Task",
    "Synopsis": "Schedule a Task",
    "parameters":[
      {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   },
      {"Name":"code_name",
      "Type":"string",
      "Required":"Y",
      "Description":"The name of the code package to execute for this task."},
      {"Name":"payload",
      "Type":"string",
      "Required":"Y",
      "Description":"A string of data to be passed to the worker (usually JSON) so the worker knows exactly what worker it should perform. This is the equivalent to a message in a typical message queue. The payload will be available in a file that your worker can access. File location will be passed in via the -payload argument. The payload cannot be larger than 64KB in size."},
      {"Name":"run_every",
      "Description": "The amount of time, in seconds, between runs. By default, the task will only run once. run_every will return a 400 error if it is set to less than 60.",
      "Required":"N",
      "Type":"int",
      "Default":"0"},
      {"Name":"end_at",
      "Description": "The time tasks will stop being queued. Should be a time or datetime.",
      "Required":"N",
      "Type":"datetime"},
      {"Name":"run_times",
      "Description": "The number of times a task will run.",
      "Required":"N",
      "Type":"int",
      "Default":"0"},
      {"Name":"priority",
      "Description": "The priority queue to run the job in. Valid values are 0, 1, and 2. The default is 0. Higher values means tasks spend less time in the queue once they come off the schedule.",
      "Required":"N",
      "Type":"int",
      "Default":"0"},
      {"Name":"start_at",
      "Description": "The time the scheduled task should first be run.",
      "Required":"N",
      "Type":"datetime"}
    ]
},
{
  "URI":"/projects/:project_id/schedules/:schedule",
    "HTTPMethod":"GET", 
    "MethodName": "Get Info About a Scheduled Task",
    "Synopsis": "The response will be a JSON object containing the details of the scheduled task.",
    "parameters":[
    {
   "Name":"schedule_id",
   "Required":"Y",
   "Type":"string",
   "Description":"schedule ID"
   },
      {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   }]
    },
{ 
  "URI":"/projects/:project_id/schedules/:Schedule_id/cancel",
    "HTTPMethod":"POST", 
    "MethodName": "Cancel a Scheduled Task",
    "Synopsis": "The response will be a JSON object containing a message explaining whether the request was successful or not.",
    "parameters":[
      {
   "Name":"project_id",
   "Required":"Y",
   "Type":"string",
   "Description":"Your Iron Project ID"
   },{
   "Name":"schedule_id",
   "Required":"Y",
   "Type":"string",
   "Description":"schedule ID"
   }]
}
    ]
    }
  ]
}
